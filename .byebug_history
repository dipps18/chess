exit
next
input
next
nxt
next
input
next
cont
next
exit
bishops
next
pieces
destination
step
next
step
next
step
exit
Object.const_get(piece).origin(input, destination, color_pieces)
origin
next
destination
next
piece
next
step
input
next
piece
next
piece
next
piece
next
piece
next
piece
next
piece
next
piece
next
piece
@piece
step
color
input
step
cont
exit
offset_y
@pos[0]
pos[0]
next
step
piece
next
piece
next
piece
piexe
step
next
step
destination
piece
next
destination
capture
origin
step
next
step
next
step
piece
next
step
exit
next
step
next
step
exit
step
next
step
piece
next
step
exit
piece
piece.pos
move
capture
valid_move?(move, piece.pos, piece.color, capture, piece)
next
piece
@cells[move[0]][move[1]]
step
moves
next
board.color_in_cell?(opp_color, diagonal)
board.color_in_cell?(opp_color, diagona)
board.out_of_bounds?(diagonal)
diagonal
step
next
@pos[0] == origin && board.squares_empty?([@pos[0] + 2 * offset_y, @pos[1]])
moves.push([@pos[0] + (2 * offset_y) , @pos[1]]) if @pos[0] == origin && board.squares_empty?([@pos[0] + 2 * offset_y, @pos[1]])
next
board.squares_empty?([@pos[0] + offset_y, @pos[1]])
board.squares_empty?([@pos[0] + offset_y, @pos[1])
@pos[1]
offset_y
@pos[0]
step
piece
next
step
exit
next
piece
next
piece
next
nect
piece
step
exit
next
step
cont
exit
next
cont
exit
piece
step
@pieces
step
@board.cells[1][1]
exit
@black[:pawns]
@white[:pawns]
@board.white[pawns]
@white[pawns]
pos
@cells[pos[0]][pos[1]]
next
step
next
color_in_cell?(opp_color, destination)
Board.capture?(input)
destination
next
destination
step
next
@board.destination(input, opp_color)
piece(input)
input
step
next
extract_input(input, color)
@board.white[:rooks]
next
color
step
exit
cont
continue
exit
pos
pieces
step
rooks
step
color
input
continue
exit
step
color
input
inpit
inpt
next
step
next
step
continue
color
step
next
step
next
step
exit
rook
next
king
next
king
step
board.white[:rooks]
next
input
step
cont
exit
next
step
exit
cont
continue
irb
game.board.white[:pawns]
game.board.white[:pawns}
e4_pawn
continue
e4_pawn
next
e4_pawn
exit
game.board.pieces
e4_pawn
game.board.white[:pawns]
game.board.white
continue
exit
p game.display_board
e4_pawn
next
continue
contine
next
e4_pawn
next
e4_pawn
next
e4_pawn
continue
next
nedt
step
game.board.white[:pawns][4]
e4_pawn
next
exit
cont
exit
continue
