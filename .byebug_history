cont
exit
valid_notation?(input, opp_color)
valid_notation?(input, opp_color
valid_move
next
opp_color
capture
next
step
dest
origin
input
color
cont
exit
piece_type
next
cont
captured_piece
next
piece_type
next
cont
exit
pos
next
board.enpassant?(dest, input, opp_color)
exit
capturing_pos
color
cont
exit
next
cont
piece
step
next
dest
cont
next
mext
next
dest
next
pieces.any?{|piece| piece.pos == piece_pos}
piece.any?{|piece| piece.pos == piece_pos}
piece.any?{|piece| piece.pos == piece_pos{
piece_pos
step
next
step
next
step
next
exit
step
pieces
next
step
setp
step
next
step
next
exit
next
step
next
step
next
exit
pieces.any?{|piece| piece.pos == piece_pos}
piece.any?{|piece| piece.pos == piece_pos}
piece.any?{|piece| piece.pos == piece_pos{
piece.any?{|piece| piece.pos == piece_pos
piece_pos
step
pieces
step
next
step
next
exit
step
input
step
next
step
next
exit
piece_type
next
pieces[:pawns]
next
step
next
step
next
exit
pieces[:pawns]
step
next
step
next
exit
color
dest
piece
next
piece
next
piece
next
dest
piece
step
piece_type
step
next
step
next
nexy
exit
step
next
step
next
piece
next
piece
exit
piece_type
next
step
next
destination
piece
step
capture
next
piece
next
nex
piece
pieces
@board.white[:pawns]
dest
origin
exit
cont
input && input.match?(/[+#]/)
input
step
next
valid_notation?(input, opp_color)
next
capture
next
step
capture
next
piece
next
piece
origin
next
dest
next
dest
next
piece_move?(input)
pawn_move?(input)
next
input
cont
exit
input
valid_notation?(input, opp_color)
next
piece.next_moves.inclu
piece
next
step
next
nex
next
piece
next
bext
break
next
step
origin
next
pawns
next
step
pawn.pos
Board.column(input[0])
pawn
step
pawn.pos[1]
pawns.pos[1]
paws.pos[1]
step
pawns
next
pieces[:pawns]
step
destination
next
piece(input)
piece
next
pawn_move?(input)
next
step
input
inpur
next
step
input
next
step
next
exit
cont
exit
@white[:bishops]
@pieces
piece
next
step
cont
step
cont
exit
valid_notation?(input, opp_color) && !check?(color)
check?(color)
valid_notation?(input, opp_color)
valid_move
next
valid_move
next
step
next
nect
next
nect
next
step
cont
step
exit
piece
