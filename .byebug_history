cont
exit
piece_in_cell?(pawn_sym, passed_pawn_pos)
pawn_capture.match?(input)
pawn_capture.match?(input_
pawn_capture
next
passed_pawn_pos
next
cont
exit
enpassant?(dest, input, color)
dest
input
color
step
input
color
step
exit
new_pos
captured_piece
next
exit
step
input
color
step
exit
captured_piece
next
exit
cont
exit
piece
step
king_pos
next
king_pos
next
king_pos
opp_pieces
step
opp_pieces
step
opp_pieces
step
opp_pieces
color
input
next
step
valid_notation?(input,opp_color(color))
next
exit
next
step
new_pos
old_pos
next
piece.next_moves.include?(new_pos)
piece[0]
piece
exit
check?(color)
color
input
piece
dest
step
next
exit
next
capture
next
exit
step
piece
step
capture
next
piece
next
old_pos
next
new_pos
next
color_pieces
piece_string
next
exit
capture
exit
capture
cont
exit
!enpassant?(destination, input, opp_col
 capture?(input) && !@board.color_in_cell?(opp_color, destination)
destination
next
destination
next
destination
next
exit
destination(input, opp_color)
new_pos
old_pos
next
new_pos
next
piece_string
next
exit
step
color
input
step
destination
step
destination
step
next
exit
new_pos
old_pos
next
mext
next
input
